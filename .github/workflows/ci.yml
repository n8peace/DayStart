name: CI Validation

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

env:
  SUPABASE_DEVELOP_PROJECT: ${{ secrets.SUPABASE_DEVELOP_PROJECT }}
  SUPABASE_MAIN_PROJECT: ${{ secrets.SUPABASE_MAIN_PROJECT }}

jobs:
  # iOS App CI (Disabled for now - focus on backend first)
  ios-ci:
    name: iOS Build & Test (Skipped)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Skip iOS Build
      run: |
        echo "iOS builds disabled - focusing on backend development first"
        echo "Will enable when iOS app development begins"
        
  # Supabase CI
  supabase-ci:
    name: Supabase Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest
        
    - name: Validate Supabase Config
      run: |
        cd supabase
        supabase --version
        
    - name: Validate Migration Files
      run: |
        cd supabase
        echo "Validating migration files..."
        for file in migrations/*.sql; do
          if [ -f "$file" ]; then
            echo "Checking $file"
            # Basic SQL syntax validation
            if ! grep -q "CREATE TABLE\|ALTER TABLE\|DROP TABLE\|CREATE INDEX\|CREATE POLICY" "$file"; then
              echo "Warning: $file doesn't contain expected SQL statements"
            fi
          fi
        done
        echo "✅ Migration files validated"
        
  # Deploy to Develop (moved to separate workflow file)
  # This job has been moved to .github/workflows/deploy-develop.yml
  # to avoid duplicate deployments and provide better organization
        
  # Production deployment moved to deploy.yml
  # This job has been moved to .github/workflows/deploy.yml
  # to avoid duplicate deployments and provide better organization
        
  # Security & Quality Checks
  security-checks:
    name: Security & Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        
    - name: Check for large files
      run: |
        find . -type f -size +10M -not -path "./.git/*" | head -10
        
    - name: Validate file structure
      run: |
        echo "Checking project structure..."
        test -f README.md || exit 1
        test -f .env.example || exit 1
        test -d supabase || exit 1
        echo "✅ Project structure is valid"
